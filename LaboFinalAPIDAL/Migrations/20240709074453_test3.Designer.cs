// <auto-generated />
using System;
using LaboFinalAPIDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaboFinalAPIDAL.Migrations
{
    [DbContext(typeof(DDBContext))]
    [Migration("20240709074453_test3")]
    partial class test3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Backgrounds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageNumber")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Backgrounds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Background = "Acolyte",
                            Feature = "Abri du fidèle",
                            LanguageNumber = 2,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Background = "Artisan de guilde",
                            Feature = "Membre de guilde (soutiens des compagnons de guilde)",
                            LanguageNumber = 1,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Background = "Artiste",
                            Feature = "À la demande du public",
                            LanguageNumber = 0,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 4,
                            Background = "Charlatan",
                            Feature = "Fausse identité",
                            LanguageNumber = 0,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 5,
                            Background = "Chevalier",
                            Feature = "Domestiques",
                            LanguageNumber = 1,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 6,
                            Background = "Criminel",
                            Feature = "Accointances avec la pègre",
                            LanguageNumber = 0,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 7,
                            Background = "Enfant des rues",
                            Feature = "Secrets de la ville (trouver un passage dans un labyrinthe urbain et se déplacer en ville 2 fois plus rapidement)",
                            LanguageNumber = 0,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 8,
                            Background = "Ermite",
                            Feature = "Découverte",
                            LanguageNumber = 1,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 9,
                            Background = "Héros du peuple",
                            Feature = "Hospitalité rustique",
                            LanguageNumber = 0,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 10,
                            Background = "Marin",
                            Feature = "Place à bord",
                            LanguageNumber = 0,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 11,
                            Background = "Noble",
                            Feature = "Apanage de la noblesse (bienvenue dans la haute société)",
                            LanguageNumber = 1,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 12,
                            Background = "Sage",
                            Feature = "Chercheur",
                            LanguageNumber = 2,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 13,
                            Background = "Sauvageon",
                            Feature = "Éternel vagabond",
                            LanguageNumber = 1,
                            SourceId = 1
                        },
                        new
                        {
                            Id = 14,
                            Background = "Soldat",
                            Feature = "Grade militaire",
                            LanguageNumber = 0,
                            SourceId = 1
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.BackgroundsItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BackgroundId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("ItemId");

                    b.ToTable("BackgroundsItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundId = 3,
                            ItemId = 68
                        },
                        new
                        {
                            Id = 2,
                            BackgroundId = 4,
                            ItemId = 68
                        },
                        new
                        {
                            Id = 3,
                            BackgroundId = 4,
                            ItemId = 67
                        },
                        new
                        {
                            Id = 4,
                            BackgroundId = 6,
                            ItemId = 87
                        },
                        new
                        {
                            Id = 5,
                            BackgroundId = 7,
                            ItemId = 68
                        },
                        new
                        {
                            Id = 6,
                            BackgroundId = 7,
                            ItemId = 87
                        },
                        new
                        {
                            Id = 7,
                            BackgroundId = 8,
                            ItemId = 66
                        },
                        new
                        {
                            Id = 8,
                            BackgroundId = 10,
                            ItemId = 86
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.BackgroundsSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BackgroundId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("SkillId");

                    b.ToTable("BackgroundSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundId = 1,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 2,
                            BackgroundId = 1,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 3,
                            BackgroundId = 2,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 4,
                            BackgroundId = 2,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 5,
                            BackgroundId = 3,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 6,
                            BackgroundId = 3,
                            SkillId = 16
                        },
                        new
                        {
                            Id = 7,
                            BackgroundId = 4,
                            SkillId = 6
                        },
                        new
                        {
                            Id = 8,
                            BackgroundId = 4,
                            SkillId = 18
                        },
                        new
                        {
                            Id = 9,
                            BackgroundId = 5,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 10,
                            BackgroundId = 5,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 11,
                            BackgroundId = 6,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 12,
                            BackgroundId = 6,
                            SkillId = 18
                        },
                        new
                        {
                            Id = 13,
                            BackgroundId = 7,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 14,
                            BackgroundId = 7,
                            SkillId = 6
                        },
                        new
                        {
                            Id = 15,
                            BackgroundId = 8,
                            SkillId = 11
                        },
                        new
                        {
                            Id = 16,
                            BackgroundId = 8,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 17,
                            BackgroundId = 9,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 18,
                            BackgroundId = 9,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 19,
                            BackgroundId = 10,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 20,
                            BackgroundId = 10,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 21,
                            BackgroundId = 11,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 22,
                            BackgroundId = 11,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 23,
                            BackgroundId = 12,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 24,
                            BackgroundId = 12,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 25,
                            BackgroundId = 13,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 26,
                            BackgroundId = 13,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 27,
                            BackgroundId = 14,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 28,
                            BackgroundId = 14,
                            SkillId = 8
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.ClassSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SkillId");

                    b.ToTable("ClassSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 1,
                            SkillId = 12
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 1,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 1,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 2,
                            SkillId = 6
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 2,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 2,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 2,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 2,
                            SkillId = 10
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 2,
                            SkillId = 11
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 2,
                            SkillId = 12
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 2,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 2,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 2,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 2,
                            SkillId = 16
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 2,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 2,
                            SkillId = 18
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 3,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 3,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 3,
                            SkillId = 11
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 3,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 3,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            SkillId = 11
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            SkillId = 12
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 5,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 5,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 5,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 5,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 5,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 43,
                            ClassId = 5,
                            SkillId = 18
                        },
                        new
                        {
                            Id = 44,
                            ClassId = 6,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 45,
                            ClassId = 6,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 46,
                            ClassId = 6,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 47,
                            ClassId = 6,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 48,
                            ClassId = 6,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 49,
                            ClassId = 6,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 50,
                            ClassId = 6,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 51,
                            ClassId = 6,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 52,
                            ClassId = 7,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 53,
                            ClassId = 7,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 54,
                            ClassId = 7,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 55,
                            ClassId = 7,
                            SkillId = 10
                        },
                        new
                        {
                            Id = 56,
                            ClassId = 7,
                            SkillId = 11
                        },
                        new
                        {
                            Id = 57,
                            ClassId = 7,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 58,
                            ClassId = 8,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 59,
                            ClassId = 8,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 60,
                            ClassId = 8,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 61,
                            ClassId = 8,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 62,
                            ClassId = 8,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 63,
                            ClassId = 8,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 64,
                            ClassId = 9,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 65,
                            ClassId = 9,
                            SkillId = 7
                        },
                        new
                        {
                            Id = 66,
                            ClassId = 9,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 67,
                            ClassId = 9,
                            SkillId = 10
                        },
                        new
                        {
                            Id = 68,
                            ClassId = 9,
                            SkillId = 12
                        },
                        new
                        {
                            Id = 69,
                            ClassId = 9,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 70,
                            ClassId = 9,
                            SkillId = 18
                        },
                        new
                        {
                            Id = 71,
                            ClassId = 10,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 72,
                            ClassId = 10,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 73,
                            ClassId = 10,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 74,
                            ClassId = 10,
                            SkillId = 11
                        },
                        new
                        {
                            Id = 75,
                            ClassId = 10,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 76,
                            ClassId = 10,
                            SkillId = 15
                        },
                        new
                        {
                            Id = 77,
                            ClassId = 11,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 78,
                            ClassId = 11,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 79,
                            ClassId = 11,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 80,
                            ClassId = 11,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 81,
                            ClassId = 11,
                            SkillId = 10
                        },
                        new
                        {
                            Id = 82,
                            ClassId = 11,
                            SkillId = 12
                        },
                        new
                        {
                            Id = 83,
                            ClassId = 11,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 84,
                            ClassId = 11,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 85,
                            ClassId = 12,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 86,
                            ClassId = 12,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 87,
                            ClassId = 12,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 88,
                            ClassId = 12,
                            SkillId = 6
                        },
                        new
                        {
                            Id = 89,
                            ClassId = 12,
                            SkillId = 8
                        },
                        new
                        {
                            Id = 90,
                            ClassId = 12,
                            SkillId = 9
                        },
                        new
                        {
                            Id = 91,
                            ClassId = 12,
                            SkillId = 10
                        },
                        new
                        {
                            Id = 92,
                            ClassId = 12,
                            SkillId = 13
                        },
                        new
                        {
                            Id = 93,
                            ClassId = 12,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 94,
                            ClassId = 12,
                            SkillId = 16
                        },
                        new
                        {
                            Id = 95,
                            ClassId = 12,
                            SkillId = 18
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharismaBonus")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConstitutionBonus")
                        .HasColumnType("int");

                    b.Property<int>("DV")
                        .HasColumnType("int");

                    b.Property<int>("DexterityBonus")
                        .HasColumnType("int");

                    b.Property<int>("IntelligenceBonus")
                        .HasColumnType("int");

                    b.Property<int>("NbSkill")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("StrenghtBonus")
                        .HasColumnType("int");

                    b.Property<int>("WisdomBonus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharismaBonus = 0,
                            Class = "Barbare",
                            ConstitutionBonus = 0,
                            DV = 12,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 2,
                            CharismaBonus = 0,
                            Class = "Barde",
                            ConstitutionBonus = 0,
                            DV = 8,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 3,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 3,
                            CharismaBonus = 0,
                            Class = "Clerc",
                            ConstitutionBonus = 0,
                            DV = 8,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 4,
                            CharismaBonus = 0,
                            Class = "Druide",
                            ConstitutionBonus = 0,
                            DV = 8,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 5,
                            CharismaBonus = 0,
                            Class = "Ensorceleur",
                            ConstitutionBonus = 0,
                            DV = 12,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 6,
                            CharismaBonus = 0,
                            Class = "Guerrier",
                            ConstitutionBonus = 0,
                            DV = 10,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 7,
                            CharismaBonus = 0,
                            Class = "Magicien",
                            ConstitutionBonus = 0,
                            DV = 6,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 8,
                            CharismaBonus = 0,
                            Class = "Moine",
                            ConstitutionBonus = 0,
                            DV = 8,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 9,
                            CharismaBonus = 0,
                            Class = "Occultiste",
                            ConstitutionBonus = 0,
                            DV = 8,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 10,
                            CharismaBonus = 0,
                            Class = "Paladin",
                            ConstitutionBonus = 0,
                            DV = 10,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 2,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 11,
                            CharismaBonus = 0,
                            Class = "Rodeur",
                            ConstitutionBonus = 0,
                            DV = 10,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 3,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        },
                        new
                        {
                            Id = 12,
                            CharismaBonus = 0,
                            Class = "Roublard",
                            ConstitutionBonus = 0,
                            DV = 8,
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            NbSkill = 4,
                            SourceId = 1,
                            StrenghtBonus = 0,
                            WisdomBonus = 0
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Entities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalFeatures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Alignment")
                        .HasColumnType("int");

                    b.Property<string>("Allies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appareance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArmorId")
                        .HasColumnType("int");

                    b.Property<int>("BackgroundId")
                        .HasColumnType("int");

                    b.Property<string>("Bonds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharachterBackStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<string>("Eyes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flaws")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<string>("Hair")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<string>("Ideals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particularities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("ShieldId")
                        .HasColumnType("int");

                    b.Property<string>("Skin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<int>("ToolOneId")
                        .HasColumnType("int");

                    b.Property<int>("ToolTwoId")
                        .HasColumnType("int");

                    b.Property<string>("Treasures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponOneId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponTwoId")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.Property<int>("Xp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("ClassId");

                    b.HasIndex("RaceId");

                    b.HasIndex("ShieldId");

                    b.HasIndex("ToolOneId");

                    b.HasIndex("ToolTwoId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeaponOneId");

                    b.HasIndex("WeaponTwoId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.EntitySkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("SkillId");

                    b.ToTable("entitySkills");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Feats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prerequisite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Feats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vous gagnez +1 en Charisme, jusqu'à un maximum de 20. Vous avez l'avantage sur les jets de Charisme (tromperie) et Charisme (représentation) lorsque vous tentez d'endosser une autre identité. Vous pouvez imiter la voix d'autres personnes ou des sons produits par d'autres créatures.",
                            Name = "Actor",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Vous gagnez un bonus de +5 à vos jets d'initiative. Vous ne pouvez pas être surpris tant que vous êtes conscient, et les créatures invisibles n'ont pas d'avantage tactique contre vous.",
                            Name = "Alert",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Augmentez votre Force ou Dextérité de 1, jusqu'à un maximum de 20. Lorsque vous êtes à terre, vous pouvez vous relever en utilisant seulement 5 pieds de mouvement. L'escalade ne coûte plus de mouvement supplémentaire pour vous, et vous pouvez effectuer des sauts en longueur ou en hauteur avec un élan réduit.",
                            Name = "Athlete",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorsque vous utilisez l'action pour vous précipiter, vous pouvez utiliser une action bonus pour effectuer une attaque de mêlée ou pousser une créature. Si vous déplacez d'au moins 10 pieds en ligne droite, vous gagnez +5 aux dégâts de l'attaque.",
                            Name = "Charger",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Vous ignorez la propriété 'Recharge' des arbalètes avec lesquelles vous êtes compétent. Être à proximité d'une cible ne désavantage plus vos attaques à distance avec une arbalète. Vous pouvez attaquer avec une arbalète à une main comme une action bonus si vous attaquez avec une arme à une main.",
                            Name = "Crossbow Expert",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorsque vous êtes attaqué au corps à corps et que vous maniez une arme de finesse avec laquelle vous êtes compétent, vous pouvez utiliser votre réaction pour ajouter votre bonus de compétence à votre CA pour cette attaque.",
                            Name = "Defensive Duelist",
                            Prerequisite = "Dextérité 13 ou plus",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Vous gagnez un bonus de +1 à la CA lorsque vous maniez une arme dans chaque main. Vous pouvez manier des armes de mêlée à une main qui n'ont pas la propriété 'Léger' lorsque vous combattez à deux armes. Vous pouvez dégainer ou ranger deux armes d'une main lors de l'action d'attaque.",
                            Name = "Dual Wielder",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 8,
                            Description = "Vous avez l'avantage sur les jets de Sagesse (Perception) et d'Intelligence (Investigation) pour détecter la présence de portes secrètes. Vous avez une résistance aux pièges. Vous avez l'avantage sur les jets de sauvegarde pour éviter ou résister aux pièges, et vous pouvez détecter et désamorcer les pièges magiques.",
                            Name = "Dungeon Delver",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 9,
                            Description = "Augmentez votre Constitution de 1, jusqu'à un maximum de 20. Lorsque vous dépensez des dés de vie pour récupérer des points de vie, le minimum de points de vie que vous récupérez est égal à deux fois votre modificateur de Constitution.",
                            Name = "Durable",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 10,
                            Description = "Choisissez un type de dégâts : acide, froid, feu, foudre ou tonnerre. Les jets de sauvegarde pour résister à vos sorts de ce type de dégâts n'ont plus de résistance contre ces dégâts. De plus, lorsque vous lancez un sort qui inflige ce type de dégâts, vous pouvez considérer un 1 sur un dé de dégâts comme un 2.",
                            Name = "Elemental Adept",
                            Prerequisite = "Capacité à lancer au moins un sort",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 11,
                            Description = "Vous avez l'avantage sur les jets d'attaque contre une créature que vous avez agrippée. Vous pouvez utiliser une action pour tenter de maîtriser une créature agrippée en effectuant un nouveau jet d'agrippement. Vous pouvez restreindre une créature que vous avez agrippée et la rendre immobilisée.",
                            Name = "Grappler",
                            Prerequisite = "Force 13 ou plus",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 12,
                            Description = "Lorsque vous obtenez un coup critique avec une arme de mêlée ou réduisez une créature à 0 points de vie, vous pouvez effectuer une attaque de mêlée comme une action bonus. Avant de faire une attaque de mêlée avec une arme lourde avec laquelle vous êtes compétent, vous pouvez choisir de prendre un malus de -5 au jet d'attaque. Si l'attaque touche, vous ajoutez +10 aux dégâts de l'attaque.",
                            Name = "Great Weapon Master",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 13,
                            Description = "Lorsque vous utilisez un kit de soins pour stabiliser un personnage à 0 points de vie, il regagne 1 point de vie. Vous pouvez utiliser une action pour soigner un allié avec un kit de soins. Ce dernier regagne des points de vie égaux à 1d6 + 4 + son nombre maximum de dés de vie.",
                            Name = "Healer",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 14,
                            Description = "Augmentez votre Force de 1, jusqu'à un maximum de 20. Vous gagnez la compétence avec les armures lourdes.",
                            Name = "Heavily Armored",
                            Prerequisite = "Compétence avec les armures intermédiaires",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 15,
                            Description = "Augmentez votre Force de 1, jusqu'à un maximum de 20. Lorsque vous êtes en armure lourde, vous subissez une réduction de 3 aux dégâts infligés par les armes non magiques.",
                            Name = "Heavy Armor Master",
                            Prerequisite = "Compétence avec les armures lourdes",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 16,
                            Description = "Vous pouvez passer 10 minutes à inspirer vos compagnons, leur offrant des points de vie temporaires égaux à votre niveau + votre modificateur de Charisme (minimum de 1). Pour bénéficier de cet effet, un compagnon doit pouvoir vous entendre et comprendre.",
                            Name = "Inspiring Leader",
                            Prerequisite = "Charisme 13 ou plus",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 17,
                            Description = "Augmentez votre Intelligence de 1, jusqu'à un maximum de 20. Vous avez une mémoire parfaite pour tout ce que vous avez vu ou entendu au cours du dernier mois. Vous pouvez toujours savoir quelle heure il est et quelle direction est le nord.",
                            Name = "Keen Mind",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 18,
                            Description = "Augmentez votre Force ou Dextérité de 1, jusqu'à un maximum de 20. Vous gagnez la compétence avec les armures légères.",
                            Name = "Lightly Armored",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 19,
                            Description = "Augmentez votre Intelligence de 1, jusqu'à un maximum de 20. Vous apprenez trois langues au choix. Vous pouvez créer des codes écrits que d'autres ne peuvent déchiffrer qu'avec un jet réussi d'Intelligence (Investigation) contre un DD égal à votre DD de sauvegarde de sorts.",
                            Name = "Linguist",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 20,
                            Description = "Vous avez 3 points de chance. Chaque fois que vous effectuez un jet d'attaque, un jet de capacité ou un jet de sauvegarde, vous pouvez dépenser un point de chance pour lancer un dé supplémentaire et choisir lequel utiliser. Vous pouvez également utiliser un point de chance pour faire relancer un jet d'attaque contre vous.",
                            Name = "Lucky",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 21,
                            Description = "Lorsque vous êtes à portée de mêlée d'une créature qui lance un sort, vous pouvez utiliser votre réaction pour effectuer une attaque de mêlée contre cette créature. Lorsque vous infligez des dégâts à une créature qui se concentre sur un sort, elle a un désavantage sur le jet de sauvegarde pour maintenir sa concentration. Vous avez l'avantage sur les jets de sauvegarde contre les sorts lancés par des créatures à portée de mêlée de vous.",
                            Name = "Mage Slayer",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 22,
                            Description = "Choisissez une classe de sort (barde, clerc, druide, ensorceleur, magicien, paladin, ranger, ou sorcier). Vous apprenez deux tours de magie au choix de cette classe. Vous apprenez également un sort de 1er niveau à lancer une fois par jour avec cette caractéristique de classe.",
                            Name = "Magic Initiate",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 23,
                            Description = "Vous apprenez deux manœuvres au choix parmi celles disponibles pour l'archétype Martial du guerrier. Si une manœuvre vous oblige à effectuer un jet de sauvegarde pour résister à ses effets, le DD de sauvegarde est égal à 8 + votre bonus de compétence + votre modificateur de Force ou de Dextérité (à votre choix). Vous gagnez une d6 de supériorité que vous pouvez utiliser pour effectuer ces manœuvres.",
                            Name = "Martial Adept",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 24,
                            Description = "Portez une armure intermédiaire ne vous impose plus de désavantage sur les jets de Dextérité (Discrétion). Lorsque vous portez une armure intermédiaire, vous pouvez ajouter 3 au lieu de 2 à votre CA si vous avez un modificateur de Dextérité positif.",
                            Name = "Medium Armor Master",
                            Prerequisite = "Compétence avec les armures intermédiaires",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 25,
                            Description = "Votre vitesse augmente de 10 pieds. Lorsque vous utilisez l'action pour vous désengager, votre déplacement n'est pas réduit par le terrain difficile jusqu'à la fin de votre tour. Lorsque vous effectuez une attaque au corps à corps contre une créature, vous ne provoquez pas d'attaque d'opportunité de sa part pour le reste de votre tour, que vous l'ayez touchée ou non.",
                            Name = "Mobile",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 26,
                            Description = "Augmentez votre Force ou Dextérité de 1, jusqu'à un maximum de 20. Vous gagnez la compétence avec les armures intermédiaires et les boucliers.",
                            Name = "Moderately Armored",
                            Prerequisite = "Compétence avec les armures légères",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 27,
                            Description = "Vous avez l'avantage sur les jets d'attaque contre toute créature de taille inférieure à celle de votre monture. Vous pouvez forcer une attaque visant votre monture à vous viser à la place. Si votre monture doit effectuer un jet de sauvegarde pour résister à un effet qui ne lui inflige que la moitié des dégâts en cas de succès, elle subit 0 dégâts en cas de succès et la moitié des dégâts en cas d'échec.",
                            Name = "Mounted Combatant",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 28,
                            Description = "Augmentez votre Intelligence ou Sagesse de 1, jusqu'à un maximum de 20. Si vous pouvez voir la bouche d'une créature pendant qu'elle parle une langue que vous comprenez, vous pouvez interpréter ce qu'elle dit en lisant sur ses lèvres. Vous avez un bonus de +5 aux jets de Sagesse (Perception) et d'Intelligence (Investigation).",
                            Name = "Observant",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 29,
                            Description = "Lorsque vous prenez l'action d'attaque et attaquez avec une lance, une hallebarde, un bâton ou une pique, vous pouvez utiliser une action bonus pour effectuer une attaque de mêlée avec l'extrémité opposée de l'arme. Cette attaque inflige des dégâts contondants égaux à 1d4 + votre modificateur de Force. Pendant votre tour, les autres créatures provoquent une attaque d'opportunité lorsque qu'elles entrent dans votre portée d'arme de mêlée.",
                            Name = "Polearm Master",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 30,
                            Description = "Augmentez une caractéristique de votre choix de 1, jusqu'à un maximum de 20. Vous gagnez la compétence dans les jets de sauvegarde utilisant cette caractéristique.",
                            Name = "Resilient",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 31,
                            Description = "Vous apprenez deux sorts de niveau 1 au choix qui ont la propriété Rituel à partir d'une liste de sorts de n'importe quelle classe. Vous devez posséder un livre de sorts, qui contient ces sorts rituels.",
                            Name = "Ritual Caster",
                            Prerequisite = "Intelligence ou Sagesse 13 ou plus",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 32,
                            Description = "Une fois par tour lorsque vous infligez des dégâts avec une arme de mêlée, vous pouvez relancer les dés de dégâts de l'arme et utiliser les meilleurs résultats.",
                            Name = "Savage Attacker",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 33,
                            Description = "Lorsque vous touchez une créature avec une attaque d'opportunité, sa vitesse devient 0 pour le reste du tour. Les créatures à portée de votre arme de mêlée provoquent une attaque d'opportunité même si elles utilisent l'action de désengagement. Lorsque une créature à portée de mêlée attaque une cible autre que vous, vous pouvez utiliser votre réaction pour effectuer une attaque de mêlée contre cette créature.",
                            Name = "Sentinel",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 34,
                            Description = "Attaquer à longue portée n'impose pas de désavantage à vos jets d'attaque à distance. Vos attaques à distance ignorent la couverture à moitié et les trois quarts. Avant de faire une attaque à distance avec une arme à distance avec laquelle vous êtes compétent, vous pouvez choisir de prendre un malus de -5 au jet d'attaque. Si l'attaque touche, vous ajoutez +10 aux dégâts de l'attaque.",
                            Name = "Sharpshooter",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 35,
                            Description = "Si vous utilisez l'action d'attaque lors de votre tour, vous pouvez utiliser une action bonus pour tenter de pousser une créature à portée avec votre bouclier. Si vous n'êtes pas immobilisé, vous pouvez ajouter votre bonus de bouclier à n'importe quel jet de sauvegarde de Dextérité contre un effet qui affecte seulement vous. Si vous subissez un jet de sauvegarde de Dextérité pour prendre seulement la moitié des dégâts, vous pouvez utiliser votre réaction pour ne subir aucun dégât si vous réussissez.",
                            Name = "Shield Master",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 36,
                            Description = "Vous gagnez la compétence dans trois compétences ou outils au choix.",
                            Name = "Skilled",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 37,
                            Description = "Vous pouvez tenter de vous cacher lorsque vous êtes légèrement obscurci par la lumière naturelle, une créature manque une attaque à distance contre vous et vous pouvez vous cacher, et lorsque vous attaquez et manquez avec une arme à distance, votre position n'est pas révélée.",
                            Name = "Skulker",
                            Prerequisite = "Dextérité 13 ou plus",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 38,
                            Description = "Lorsque vous lancez un sort qui nécessite un jet d'attaque, la portée du sort est doublée. Vos attaques avec des sorts ignorent la couverture à moitié et les trois quarts. Vous apprenez un tour de magie au choix nécessitant un jet d'attaque à partir d'une liste de sorts d'une classe.",
                            Name = "Spell Sniper",
                            Prerequisite = "Capacité à lancer au moins un sort",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 39,
                            Description = "Augmentez votre Force ou Constitution de 1, jusqu'à un maximum de 20. Vous êtes compétent avec les armes improvisées et vos attaques à mains nues infligent des dégâts contondants égaux à 1d4 + votre modificateur de Force. Lorsque vous frappez une créature avec une attaque à mains nues ou une arme improvisée pendant votre tour, vous pouvez utiliser une action bonus pour tenter d'agripper la cible.",
                            Name = "Tavern Brawler",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 40,
                            Description = "Votre maximum de points de vie augmente de 2 pour chaque niveau que vous avez, et de 2 pour chaque niveau que vous gagnez par la suite.",
                            Name = "Tough",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 41,
                            Description = "Vous avez l'avantage sur les jets de sauvegarde de Constitution pour maintenir votre concentration sur un sort lorsque vous subissez des dégâts. Vous pouvez effectuer des composantes somatiques de sorts même si vous avez des armes ou un bouclier dans une ou les deux mains. Lorsque vous provoquez une attaque d'opportunité, vous pouvez lancer un sort au lieu d'une attaque de mêlée.",
                            Name = "War Caster",
                            Prerequisite = "Capacité à lancer au moins un sort",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 42,
                            Description = "Augmentez votre Force ou Dextérité de 1, jusqu'à un maximum de 20. Vous gagnez la compétence dans quatre armes au choix.",
                            Name = "Weapon Master",
                            Prerequisite = "Aucun",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 43,
                            Description = "Choisissez une école de magie. Vous apprenez deux sorts de niveau 1 de cette école. Vous pouvez les lancer sans utiliser de composantes matérielles. Vous gagnez une récupération partielle des emplacements de sorts utilisés.",
                            Name = "Adepte des arcanes",
                            Prerequisite = "Classe de lanceur de sorts",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 44,
                            Description = "Vous apprenez deux manœuvres au choix parmi celles disponibles pour l'archétype Martial du guerrier. Vous gagnez une d6 de supériorité pour les manœuvres.",
                            Name = "Apprenti Martial",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 45,
                            Description = "Lorsque vous effectuez une action pour aider un allié, la portée de cette action est de 30 pieds. Vous pouvez utiliser votre réaction pour accorder un bonus d'attaque ou de CA à un allié dans un rayon de 30 pieds.",
                            Name = "Chef de bande",
                            Prerequisite = "Charisme 13 ou plus",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 46,
                            Description = "Lorsque vous utilisez un kit de soins, la créature regagne des points de vie supplémentaires égaux à 1d6 + 4 + son nombre de dés de vie.",
                            Name = "Guérisseur",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 47,
                            Description = "Vous avez l'avantage sur les jets de Sagesse (Survie) pour suivre les créatures et les jets de Constitution pour éviter les épuisements dus aux voyages sur de longues distances.",
                            Name = "Marcheur des bois",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 48,
                            Description = "Vous pouvez essayer de vous cacher même lorsque vous êtes légèrement obscurci par des feuillages, de la neige, de la pluie ou d'autres phénomènes naturels.",
                            Name = "Maître du camouflage",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 49,
                            Description = "Vous pouvez copier un sort dans votre livre de sorts en moitié moins de temps et en utilisant moitié moins de ressources.",
                            Name = "Maître des livres de sorts",
                            Prerequisite = "Intelligence 13 ou plus",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 50,
                            Description = "Vous apprenez deux sorts de l'école de magie de l'abjuration ou de la divination. Vous pouvez les lancer sans utiliser de composantes matérielles.",
                            Name = "Percepteur des arcanes",
                            Prerequisite = "Intelligence 13 ou plus",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 51,
                            Description = "Vous avez l'avantage sur les jets pour rester en selle. Si votre monture est forcée de faire un jet de sauvegarde pour éviter des effets, elle subit seulement la moitié des dégâts en cas de réussite.",
                            Name = "Pilote de monture",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 52,
                            Description = "Vous pouvez vous déplacer à votre vitesse normale à travers une foule. Vous avez l'avantage sur les jets de Sagesse (Perception) et d'Intelligence (Investigation) pour trouver des individus ou des objets cachés en milieu urbain.",
                            Name = "Rodeur urbain",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 53,
                            Description = "Lorsque vous lancez un sort nécessitant un jet d'attaque, la portée du sort est doublée. Vos attaques de sort ignorent la demi-couverture et les trois quarts de couverture.",
                            Name = "Sniper de sort",
                            Prerequisite = "Capacité à lancer au moins un sort",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 54,
                            Description = "Vous n'avez pas de désavantage sur les jets d'attaque à distance à longue portée. Vos attaques à distance ignorent la couverture à moitié et les trois quarts. Avant de faire une attaque à distance, vous pouvez choisir de prendre un malus de -5 au jet d'attaque. Si l'attaque touche, vous ajoutez +10 aux dégâts de l'attaque.",
                            Name = "Tireur d'élite",
                            Prerequisite = "Aucun",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 55,
                            Description = "Vous apprenez deux sorts de votre liste de sorts. Vous pouvez les lancer sans utiliser de composantes matérielles. Vous pouvez également les lancer une fois chacun sans utiliser de slots de sorts.",
                            Name = "Virtuose des arcanes",
                            Prerequisite = "Capacité à lancer au moins un sort",
                            SourceId = 2
                        },
                        new
                        {
                            Id = 56,
                            Description = "Vous apprenez un tour de magie de la liste de sorts de l'artificier. Vous apprenez également deux sorts de 1er niveau de la liste de sorts de l'artificier. Vous pouvez lancer chacun de ces sorts une fois sans utiliser d'emplacement de sort. Vous récupérez la capacité de le faire lorsque vous terminez un repos long.",
                            Name = "Artificier initié",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 57,
                            Description = "Vous gagnez une compétence avec les armes de guerre et une compétence avec un bouclier. Vous gagnez également une attaque supplémentaire avec une arme de guerre ou un bouclier.",
                            Name = "Initiation au combat rapproché",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 58,
                            Description = "Lorsque vous lancez un sort de métamorphose de 1er niveau ou plus qui cible une créature amie, vous pouvez cibler une deuxième créature amie dans la portée du sort avec le même sort.",
                            Name = "Adepte des métamorphoses",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 59,
                            Description = "Vous gagnez une compétence dans une arme au choix et une compétence dans une armure légère ou moyenne.",
                            Name = "Érudition martiale",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 60,
                            Description = "Vous gagnez la compétence dans la compétence Survie. Vous avez l'avantage sur les jets de survie pour suivre les créatures et trouver de la nourriture et de l'eau dans la nature.",
                            Name = "Expert en survie",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 61,
                            Description = "Vous apprenez la recette de trois potions de guérison et pouvez les créer pendant un repos long en utilisant des composants alchimiques.",
                            Name = "Initiation à l'alchimie",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 62,
                            Description = "Vous gagnez une compétence avec les arcs longs et les arcs courts. Vous pouvez ignorer les pénalités de désavantage pour attaquer à longue portée avec ces armes.",
                            Name = "Initiation au tir à l'arc",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 63,
                            Description = "Lorsque vous utilisez une baguette, un bâton ou un sceptre pour lancer un sort, vous pouvez augmenter le DD de sauvegarde du sort de 1.",
                            Name = "Adepte en manipulation magique",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 64,
                            Description = "Lorsque vous protégez une créature amie avec votre bouclier, la créature gagne un bonus de +1 à la CA et vous avez l'avantage sur les jets de sauvegarde pour éviter d'être déplacé ou renversé.",
                            Name = "Défenseur des faibles",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 65,
                            Description = "Vous apprenez deux sorts de la liste de sorts de l'école de l'illusion ou de la nécromancie. Vous pouvez les lancer sans utiliser de composantes matérielles.",
                            Name = "Sorcier de l'ombre",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 66,
                            Description = "Vous pouvez créer une potion de guérison pendant un repos court en utilisant des composants alchimiques. Vous pouvez également identifier les potions en les goûtant.",
                            Name = "Maître des potions",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 67,
                            Description = "Vous apprenez deux sorts de l'école de l'invocation. Vous pouvez les lancer sans utiliser de composantes matérielles.",
                            Name = "Initiation à l'invocation",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 68,
                            Description = "Vous gagnez la compétence avec les armures intermédiaires et lourdes. Lorsque vous portez une armure intermédiaire ou lourde, vous pouvez ajouter 1 à la CA.",
                            Name = "Expert en armures",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 69,
                            Description = "Vous gagnez la compétence avec les armes de guerre. Vous pouvez choisir deux armes de guerre et vous gagnez un bonus de +1 aux jets d'attaque et de dégâts avec ces armes.",
                            Name = "Expert en armes",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        },
                        new
                        {
                            Id = 70,
                            Description = "Vous apprenez un tour de magie de la liste de sorts de l'ensorceleur, du magicien ou du sorcier. Vous pouvez également lancer un sort de niveau 1 de ces listes de sorts une fois sans utiliser d'emplacement de sort. Vous récupérez la capacité de le faire lorsque vous terminez un repos long.",
                            Name = "Initiation au combat magique",
                            Prerequisite = "Aucun",
                            SourceId = 3
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Inventories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("ItemId");

                    b.ToTable("inventories");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ca")
                        .HasColumnType("int");

                    b.Property<int?>("Ca_Bonus")
                        .HasColumnType("int");

                    b.Property<int?>("DiceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("DiceType")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("propreties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Bâton",
                            Price = 200,
                            TypeId = 1,
                            propreties = "Polyvalente (1d8)",
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 2,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Dague",
                            Price = 2000,
                            TypeId = 1,
                            propreties = "Finesse, légère, lancer (portée 6 m/18 m)",
                            weight = 500.0
                        },
                        new
                        {
                            Id = 3,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Gourdin",
                            Price = 100,
                            TypeId = 1,
                            propreties = "Légère",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 4,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Hachette",
                            Price = 5000,
                            TypeId = 1,
                            propreties = "Légère, lancer (portée 6 m/18 m)",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 5,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Javeline",
                            Price = 500,
                            TypeId = 1,
                            propreties = "Lancer (portée 9 m/36 m)",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 6,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Lance",
                            Price = 100,
                            TypeId = 1,
                            propreties = "Lancer (portée 6 m/18 m), polyvalente (1d8)",
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 7,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Marteau léger",
                            Price = 2000,
                            TypeId = 1,
                            propreties = "Légère, lancer (portée 6 m/18 m)",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 8,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Masse d'armes",
                            Price = 5000,
                            TypeId = 1,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 9,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Massue",
                            Price = 200,
                            TypeId = 1,
                            propreties = "À deux mains",
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 10,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Serpe",
                            Price = 100,
                            TypeId = 1,
                            propreties = "Légère",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 11,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Arbalète légère",
                            Price = 2500,
                            TypeId = 2,
                            propreties = "Munitions (portée 24 m/96 m), chargement, à deux mains",
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 12,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Arc court",
                            Price = 2500,
                            TypeId = 2,
                            propreties = "Munitions (portée 24 m/96 m), à deux mains",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 13,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Fléchette",
                            Price = 50,
                            TypeId = 2,
                            propreties = "Finesse, lancer (portée 6 m/18 m)",
                            weight = 100.0
                        },
                        new
                        {
                            Id = 14,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Fronde",
                            Price = 100,
                            TypeId = 2,
                            propreties = "Munitions (portée 9 m/36 m)",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 15,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Cimeterre",
                            Price = 2500,
                            TypeId = 3,
                            propreties = "Finesse, légère",
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 16,
                            DiceNumber = 1,
                            DiceType = 10,
                            Item = "Coutille",
                            Price = 2000,
                            TypeId = 3,
                            propreties = "Lourde, allonge, à deux mains",
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 17,
                            DiceNumber = 3,
                            DiceType = 6,
                            Item = "Épée à deux mains",
                            Price = 5000,
                            TypeId = 3,
                            propreties = "Lourde, à deux mains",
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 18,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Épée courte",
                            Price = 1000,
                            TypeId = 3,
                            propreties = "Finesse, légère",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 19,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Épée longue",
                            Price = 1500,
                            TypeId = 3,
                            propreties = "Polyvalente (1d10)",
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 20,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Fléau d'armes",
                            Price = 1000,
                            TypeId = 3,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 21,
                            DiceNumber = 1,
                            DiceType = 4,
                            Item = "Fouet",
                            Price = 200,
                            TypeId = 3,
                            propreties = "Finesse, allonge",
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 22,
                            DiceNumber = 1,
                            DiceType = 12,
                            Item = "Hache à deux mains",
                            Price = 3000,
                            TypeId = 3,
                            propreties = "Lourde, à deux mains",
                            weight = 3500.0
                        },
                        new
                        {
                            Id = 23,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Hache d'armes",
                            Price = 1000,
                            TypeId = 3,
                            propreties = "Polyvalente (1d10)",
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 24,
                            DiceNumber = 1,
                            DiceType = 10,
                            Item = "Hallebarde",
                            Price = 2000,
                            TypeId = 3,
                            propreties = "Lourde, allonge, à deux mains",
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 25,
                            DiceNumber = 1,
                            DiceType = 12,
                            Item = "Lance d’arçon",
                            Price = 1000,
                            TypeId = 3,
                            propreties = "Allonge, spécial",
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 26,
                            DiceNumber = 2,
                            DiceType = 6,
                            Item = "Maillet",
                            Price = 1000,
                            TypeId = 3,
                            propreties = "Lourde, à deux mains",
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 27,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Marteau de guerre",
                            Price = 1500,
                            TypeId = 3,
                            propreties = "Polyvalente (1d10)",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 28,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Morgenstern",
                            Price = 1500,
                            TypeId = 3,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 29,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Pic de guerre",
                            Price = 500,
                            TypeId = 3,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 30,
                            DiceNumber = 1,
                            DiceType = 10,
                            Item = "Pique",
                            Price = 500,
                            TypeId = 3,
                            propreties = "Lourde, allonge, à deux mains",
                            weight = 9000.0
                        },
                        new
                        {
                            Id = 31,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Rapière",
                            Price = 2500,
                            TypeId = 3,
                            propreties = "Finesse",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 32,
                            DiceNumber = 1,
                            DiceType = 6,
                            Item = "Trident",
                            Price = 500,
                            TypeId = 3,
                            propreties = "Lancer (portée 6 m/18 m), polyvalente (1d8)",
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 33,
                            DiceNumber = 4,
                            DiceType = 6,
                            Item = "Arbalète de poing",
                            Price = 7500,
                            TypeId = 2,
                            propreties = "Munitions (portée 9 m/36 m), légère, chargement",
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 34,
                            DiceNumber = 4,
                            DiceType = 10,
                            Item = "Arbalète lourde",
                            Price = 5000,
                            TypeId = 2,
                            propreties = "Munitions (portée 30 m/120 m), lourde, chargement, à deux mains",
                            weight = 9000.0
                        },
                        new
                        {
                            Id = 35,
                            DiceNumber = 1,
                            DiceType = 8,
                            Item = "Arc long",
                            Price = 5000,
                            TypeId = 2,
                            propreties = "Munitions (portée 45 m/180 m), lourde, à deux mains",
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 36,
                            DiceNumber = 0,
                            DiceType = 0,
                            Item = "Filet",
                            Price = 100,
                            TypeId = 4,
                            propreties = "Lancer (portée 1,50 m/4,50 m), spécial",
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 37,
                            DiceNumber = 1,
                            DiceType = 1,
                            Item = "Sarbacane",
                            Price = 1000,
                            TypeId = 4,
                            propreties = "Munitions (portée 7,50 m/15 m), légère",
                            weight = 500.0
                        },
                        new
                        {
                            Id = 38,
                            Ca = 11,
                            Item = "Matelassée",
                            Price = 500,
                            TypeId = 5,
                            propreties = "Discrétion : Désavantage",
                            weight = 4000.0
                        },
                        new
                        {
                            Id = 39,
                            Ca = 11,
                            Item = "Cuir",
                            Price = 1000,
                            TypeId = 5,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 40,
                            Ca = 12,
                            Item = "Cuir clouté",
                            Price = 4500,
                            TypeId = 5,
                            weight = 6500.0
                        },
                        new
                        {
                            Id = 41,
                            Ca = 12,
                            Item = "Peaux",
                            Price = 1000,
                            TypeId = 6,
                            propreties = "Mod.Dex (max +2)",
                            weight = 6000.0
                        },
                        new
                        {
                            Id = 42,
                            Ca = 13,
                            Item = "Chemise de mailles",
                            Price = 5000,
                            TypeId = 6,
                            propreties = "Mod.Dex (max +2)",
                            weight = 10000.0
                        },
                        new
                        {
                            Id = 43,
                            Ca = 14,
                            Item = "Écailles",
                            Price = 5000,
                            TypeId = 6,
                            propreties = "Mod.Dex (max +2), Discrétion : Désavantage",
                            weight = 22500.0
                        },
                        new
                        {
                            Id = 44,
                            Ca = 14,
                            Item = "Cuirasse",
                            Price = 40000,
                            TypeId = 6,
                            propreties = "Mod.Dex (max +2)",
                            weight = 10000.0
                        },
                        new
                        {
                            Id = 45,
                            Ca = 15,
                            Item = "Demi-plate",
                            Price = 75000,
                            TypeId = 6,
                            propreties = "Mod.Dex (max +2), Discrétion : Désavantage",
                            weight = 20000.0
                        },
                        new
                        {
                            Id = 46,
                            Ca = 14,
                            Item = "Broigne",
                            Price = 3000,
                            TypeId = 7,
                            propreties = "Discrétion : Désavantage",
                            weight = 20000.0
                        },
                        new
                        {
                            Id = 47,
                            Ca = 16,
                            Item = "Cotte de mailles",
                            Price = 7500,
                            TypeId = 7,
                            propreties = "Forces : 13, Discrétion : Désavantage",
                            weight = 27500.0
                        },
                        new
                        {
                            Id = 48,
                            Ca = 17,
                            Item = "Clibanion",
                            Price = 20000,
                            TypeId = 7,
                            propreties = "Forces : 15, Discrétion : Désavantage",
                            weight = 30000.0
                        },
                        new
                        {
                            Id = 49,
                            Ca = 18,
                            Item = "Harnois",
                            Price = 150000,
                            TypeId = 7,
                            propreties = "Forces : 15, Discrétion : Désavantage",
                            weight = 32500.0
                        },
                        new
                        {
                            Id = 50,
                            Ca = 2,
                            Item = "Bouclier",
                            Price = 1000,
                            TypeId = 8,
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 51,
                            Item = "Chalemie",
                            Price = 200,
                            TypeId = 9,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 52,
                            Item = "Cor",
                            Price = 300,
                            TypeId = 9,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 53,
                            Item = "Cornemuse",
                            Price = 3000,
                            TypeId = 9,
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 54,
                            Item = "Flûte",
                            Price = 200,
                            TypeId = 9,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 55,
                            Item = "Flûte de pan",
                            Price = 1200,
                            TypeId = 9,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 56,
                            Item = "Luth",
                            Price = 3500,
                            TypeId = 9,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 57,
                            Item = "Lyre",
                            Price = 3000,
                            TypeId = 9,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 58,
                            Item = "Tambour",
                            Price = 600,
                            TypeId = 9,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 59,
                            Item = "Tympanon",
                            Price = 2500,
                            TypeId = 9,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 60,
                            Item = "Viole",
                            Price = 3000,
                            TypeId = 9,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 61,
                            Item = "Dés",
                            Price = 10,
                            TypeId = 10,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 62,
                            Item = "Jeu d'échecs draconiques",
                            Price = 100,
                            TypeId = 10,
                            weight = 250.0
                        },
                        new
                        {
                            Id = 63,
                            Item = "Jeu de cartes",
                            Price = 50,
                            TypeId = 10,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 64,
                            Item = "Jeu des Dragons",
                            Price = 100,
                            TypeId = 10,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 65,
                            Item = "Kit d'empoisonneur",
                            Price = 5000,
                            TypeId = 11,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 66,
                            Item = "Kit d'herboriste",
                            Price = 500,
                            TypeId = 11,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 67,
                            Item = "Kit de contrefaçon",
                            Price = 1500,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 68,
                            Item = "Kit de déguisement",
                            Price = 2500,
                            TypeId = 11,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 69,
                            Item = "Matériel d'alchimiste",
                            Price = 5000,
                            TypeId = 11,
                            weight = 4000.0
                        },
                        new
                        {
                            Id = 70,
                            Item = "Matériel de brasseur",
                            Price = 2000,
                            TypeId = 11,
                            weight = 4500.0
                        },
                        new
                        {
                            Id = 71,
                            Item = "Matériel de calligraphe",
                            Price = 1000,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 72,
                            Item = "Matériel de peintre",
                            Price = 1000,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 73,
                            Item = "Outils de bijoutier",
                            Price = 2500,
                            TypeId = 11,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 74,
                            Item = "Outils de bricoleur",
                            Price = 5000,
                            TypeId = 11,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 75,
                            Item = "Outils de cartographe",
                            Price = 1500,
                            TypeId = 11,
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 76,
                            Item = "Outils de charpentier",
                            Price = 800,
                            TypeId = 11,
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 77,
                            Item = "Outils de cordonnier",
                            Price = 500,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 78,
                            Item = "Outils de forgeron",
                            Price = 2000,
                            TypeId = 11,
                            weight = 4000.0
                        },
                        new
                        {
                            Id = 79,
                            Item = "Outils de maçon",
                            Price = 1000,
                            TypeId = 11,
                            weight = 4000.0
                        },
                        new
                        {
                            Id = 80,
                            Item = "Outils de menuisier",
                            Price = 100,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 81,
                            Item = "Outils de potier",
                            Price = 1000,
                            TypeId = 11,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 82,
                            Item = "Outils de souffleur de verre",
                            Price = 3000,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 83,
                            Item = "Outils de tanneur",
                            Price = 500,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 84,
                            Item = "Outils de tisserand",
                            Price = 100,
                            TypeId = 11,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 85,
                            Item = "Ustensiles de cuisinier",
                            Price = 100,
                            TypeId = 11,
                            weight = 4000.0
                        },
                        new
                        {
                            Id = 86,
                            Item = "Outils de navigateur",
                            Price = 2500,
                            TypeId = 11,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 87,
                            Item = "Outils de voleur",
                            Price = 2500,
                            TypeId = 11,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 88,
                            Item = "Âne ou mule",
                            Price = 800,
                            TypeId = 12,
                            propreties = "Vitesse : 12 m, Capacité de charge : 210 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 89,
                            Item = "Chameau",
                            Price = 5000,
                            TypeId = 12,
                            propreties = "Vitesse : 15 m, Capacité de charge : 240 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 90,
                            Item = "Cheval de guerre",
                            Price = 40000,
                            TypeId = 12,
                            propreties = "Vitesse : 18 m, Capacité de charge : 270 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 91,
                            Item = "Cheval de selle",
                            Price = 7500,
                            TypeId = 12,
                            propreties = "Vitesse : 18 m, Capacité de charge : 240 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 92,
                            Item = "Cheval de trait",
                            Price = 5000,
                            TypeId = 12,
                            propreties = "Vitesse : 12 m, Capacité de charge : 270 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 93,
                            Item = "Éléphant",
                            Price = 20000,
                            TypeId = 12,
                            propreties = "Vitesse : 12 m, Capacité de charge : 660 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 94,
                            Item = "Molosse",
                            Price = 2500,
                            TypeId = 12,
                            propreties = "Vitesse : 12 m, Capacité de charge : 95 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 95,
                            Item = "Poney",
                            Price = 3000,
                            TypeId = 12,
                            propreties = "Vitesse : 12 m, Capacité de charge : 115 kg",
                            weight = 0.0
                        },
                        new
                        {
                            Id = 97,
                            Item = "Antidote (fiole)",
                            Price = 5000,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 98,
                            Item = "Balance de marchand",
                            Price = 500,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 99,
                            Item = "Bélier portable",
                            Price = 400,
                            TypeId = 13,
                            weight = 17500.0
                        },
                        new
                        {
                            Id = 100,
                            Item = "Billes (sac de 1000)",
                            Price = 100,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 101,
                            Item = "Boite d'allume-feu",
                            Price = 5,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 102,
                            Item = "Bougie",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 103,
                            Item = "Boulier",
                            Price = 2,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 104,
                            Item = "Bouteille en verre",
                            Price = 2,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 105,
                            Item = "Cadenas",
                            Price = 10,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 106,
                            Item = "Carquois",
                            Price = 1,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 107,
                            Item = "Chaîne (3 m)",
                            Price = 5,
                            TypeId = 13,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 108,
                            Item = "Chausse-trappes (sac de 20)",
                            Price = 1,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 109,
                            Item = "Chevalière",
                            Price = 5,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 110,
                            Item = "Cire à cacheter",
                            Price = 5,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 111,
                            Item = "Cloche",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 112,
                            Item = "Coffre",
                            Price = 5,
                            TypeId = 13,
                            weight = 12500.0
                        },
                        new
                        {
                            Id = 113,
                            Item = "Corde en chanvre (15 m)",
                            Price = 1,
                            TypeId = 13,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 114,
                            Item = "Corde en soie (15 m)",
                            Price = 10,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 115,
                            Item = "Couverture",
                            Price = 5,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 116,
                            Item = "Craie (un morceau)",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 117,
                            Item = "Cruche ou pichet",
                            Price = 2,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 118,
                            Item = "Eau bénite (flasque)",
                            Price = 2500,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 119,
                            Item = "Échelle (3 m)",
                            Price = 1,
                            TypeId = 13,
                            weight = 12500.0
                        },
                        new
                        {
                            Id = 120,
                            Item = "Encre (bouteille de 30 ml)",
                            Price = 10,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 121,
                            Item = "Étui à carreaux",
                            Price = 1,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 122,
                            Item = "Étui à cartes ou parchemins",
                            Price = 1,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 123,
                            Item = "Feu grégeois (flasque)",
                            Price = 5000,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 124,
                            Item = "Fiole (10 cl)",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 125,
                            Item = "Flasque ou chope (50 cl)",
                            Price = 2,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 126,
                            Item = "Focaliseur arcanique - Baguette",
                            Price = 10,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 127,
                            Item = "Focaliseur arcanique - Bâton",
                            Price = 5,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 128,
                            Item = "Focaliseur arcanique - Boule de cristal",
                            Price = 10,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 129,
                            Item = "Focaliseur arcanique - Orbe",
                            Price = 20,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 130,
                            Item = "Focaliseur arcanique - Sceptre",
                            Price = 10,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 131,
                            Item = "Focaliseur druidique - Baguette d'if",
                            Price = 10,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 132,
                            Item = "Focaliseur druidique - Bâton",
                            Price = 5,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 133,
                            Item = "Focaliseur druidique - Branche de gui",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 134,
                            Item = "Focaliseur druidique - Totem",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 135,
                            Item = "Gamelle",
                            Price = 2,
                            TypeId = 7,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 136,
                            Item = "Gourde (pleine)",
                            Price = 2,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 137,
                            Item = "Grappin",
                            Price = 2,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 138,
                            Item = "Grimoire",
                            Price = 50,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 139,
                            Item = "Huile (flasque)",
                            Price = 1,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 140,
                            Item = "Kit d’escalade",
                            Price = 25,
                            TypeId = 13,
                            weight = 6000.0
                        },
                        new
                        {
                            Id = 141,
                            Item = "Lampe",
                            Price = 5,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 142,
                            Item = "Lanterne à capote",
                            Price = 5,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 143,
                            Item = "Lanterne sourde",
                            Price = 10,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 144,
                            Item = "Livre",
                            Price = 25,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 145,
                            Item = "Longue-vue",
                            Price = 1000,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 146,
                            Item = "Loupe",
                            Price = 100,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 147,
                            Item = "Marteau",
                            Price = 1,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 148,
                            Item = "Marteau de forgeron",
                            Price = 2,
                            TypeId = 13,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 149,
                            Item = "Matériel de pêche",
                            Price = 1,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 150,
                            Item = "Menottes",
                            Price = 2,
                            TypeId = 13,
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 151,
                            Item = "Miroir en acier",
                            Price = 5,
                            TypeId = 13,
                            weight = 250.0
                        },
                        new
                        {
                            Id = 152,
                            Item = "Aiguilles de sarbacane (50)",
                            Price = 100,
                            TypeId = 11,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 153,
                            Item = "Billes de fronde (20)",
                            Price = 4,
                            TypeId = 11,
                            weight = 750.0
                        },
                        new
                        {
                            Id = 154,
                            Item = "Carreaux d'arbalète (20)",
                            Price = 1,
                            TypeId = 11,
                            weight = 750.0
                        },
                        new
                        {
                            Id = 155,
                            Item = "Flèches (20)",
                            Price = 1,
                            TypeId = 11,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 156,
                            Item = "Palan",
                            Price = 1,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 157,
                            Item = "Panier",
                            Price = 4,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 158,
                            Item = "Papier (une feuille)",
                            Price = 2,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 159,
                            Item = "Parchemin (une feuille)",
                            Price = 1,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 160,
                            Item = "Parfum (fiole)",
                            Price = 5,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 161,
                            Item = "Pelle",
                            Price = 2,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 162,
                            Item = "Perche (3 m)",
                            Price = 5,
                            TypeId = 13,
                            weight = 3500.0
                        },
                        new
                        {
                            Id = 163,
                            Item = "Pied-de-biche",
                            Price = 2,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 164,
                            Item = "Piège à mâchoires",
                            Price = 5,
                            TypeId = 13,
                            weight = 12500.0
                        },
                        new
                        {
                            Id = 165,
                            Item = "Pierre à aiguiser",
                            Price = 1,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 166,
                            Item = "Pioche de mineur",
                            Price = 2,
                            TypeId = 13,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 167,
                            Item = "Piton",
                            Price = 5,
                            TypeId = 13,
                            weight = 125.0
                        },
                        new
                        {
                            Id = 168,
                            Item = "Plume d’écriture",
                            Price = 2,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 169,
                            Item = "Pointes en fer (10)",
                            Price = 1,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 170,
                            Item = "Poison (fiole)",
                            Price = 100,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 171,
                            Item = "Pot en fer",
                            Price = 2,
                            TypeId = 13,
                            weight = 5000.0
                        },
                        new
                        {
                            Id = 172,
                            Item = "Potion de guérison",
                            Price = 50,
                            TypeId = 13,
                            weight = 250.0
                        },
                        new
                        {
                            Id = 173,
                            Item = "Rations (1 jour)",
                            Price = 5,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 174,
                            Item = "Robes",
                            Price = 1,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 175,
                            Item = "Sablier",
                            Price = 25,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 176,
                            Item = "Sac",
                            Price = 1,
                            TypeId = 13,
                            weight = 250.0
                        },
                        new
                        {
                            Id = 177,
                            Item = "Sac à dos",
                            Price = 2,
                            TypeId = 13,
                            weight = 2500.0
                        },
                        new
                        {
                            Id = 178,
                            Item = "Sac de couchage",
                            Price = 1,
                            TypeId = 13,
                            weight = 3500.0
                        },
                        new
                        {
                            Id = 179,
                            Item = "Sacoche",
                            Price = 5,
                            TypeId = 10,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 180,
                            Item = "Sacoche à composantes",
                            Price = 25,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 181,
                            Item = "Savon",
                            Price = 2,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 182,
                            Item = "Seau",
                            Price = 5,
                            TypeId = 13,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 183,
                            Item = "Sifflet",
                            Price = 5,
                            TypeId = 13,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 184,
                            Item = "Amulette",
                            Price = 5,
                            TypeId = 12,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 185,
                            Item = "Emblème",
                            Price = 5,
                            TypeId = 12,
                            weight = 0.0
                        },
                        new
                        {
                            Id = 186,
                            Item = "Reliquaire",
                            Price = 5,
                            TypeId = 12,
                            weight = 1000.0
                        },
                        new
                        {
                            Id = 187,
                            Item = "Tente",
                            Price = 200,
                            TypeId = 13,
                            weight = 10000.0
                        },
                        new
                        {
                            Id = 188,
                            Item = "Tonneau",
                            Price = 200,
                            TypeId = 13,
                            weight = 35000.0
                        },
                        new
                        {
                            Id = 189,
                            Item = "Torche",
                            Price = 1,
                            TypeId = 13,
                            weight = 500.0
                        },
                        new
                        {
                            Id = 190,
                            Item = "Trousse de soins",
                            Price = 500,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 191,
                            Item = "Vêtements, communs",
                            Price = 5,
                            TypeId = 13,
                            weight = 1500.0
                        },
                        new
                        {
                            Id = 192,
                            Item = "Vêtements, costume",
                            Price = 500,
                            TypeId = 13,
                            weight = 2000.0
                        },
                        new
                        {
                            Id = 193,
                            Item = "Vêtements, fins",
                            Price = 1500,
                            TypeId = 13,
                            weight = 3000.0
                        },
                        new
                        {
                            Id = 194,
                            Item = "Vêtements, voyage",
                            Price = 200,
                            TypeId = 13,
                            weight = 2000.0
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Languages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Language = "Commun"
                        },
                        new
                        {
                            Id = 2,
                            Language = "Nain"
                        },
                        new
                        {
                            Id = 3,
                            Language = "Elfique"
                        },
                        new
                        {
                            Id = 4,
                            Language = "Gnome"
                        },
                        new
                        {
                            Id = 5,
                            Language = "Halfelin"
                        },
                        new
                        {
                            Id = 6,
                            Language = "Orc"
                        },
                        new
                        {
                            Id = 7,
                            Language = "Abyssal"
                        },
                        new
                        {
                            Id = 8,
                            Language = "Céleste"
                        },
                        new
                        {
                            Id = 9,
                            Language = "Commun des profondeurs"
                        },
                        new
                        {
                            Id = 10,
                            Language = "Draconique"
                        },
                        new
                        {
                            Id = 11,
                            Language = "Infernal"
                        },
                        new
                        {
                            Id = 12,
                            Language = "Primordial"
                        },
                        new
                        {
                            Id = 13,
                            Language = "Sylvestre"
                        },
                        new
                        {
                            Id = 14,
                            Language = "Squelettique"
                        },
                        new
                        {
                            Id = 15,
                            Language = "Ignan"
                        },
                        new
                        {
                            Id = 16,
                            Language = "Terran"
                        },
                        new
                        {
                            Id = 17,
                            Language = "Aquatique"
                        },
                        new
                        {
                            Id = 18,
                            Language = "Auran"
                        },
                        new
                        {
                            Id = 19,
                            Language = "Géant"
                        },
                        new
                        {
                            Id = 20,
                            Language = "Gobelin"
                        },
                        new
                        {
                            Id = 21,
                            Language = "Gnoll"
                        },
                        new
                        {
                            Id = 22,
                            Language = "Halfling"
                        },
                        new
                        {
                            Id = 23,
                            Language = "Orc"
                        },
                        new
                        {
                            Id = 24,
                            Language = "Profond"
                        },
                        new
                        {
                            Id = 25,
                            Language = "Chaque"
                        },
                        new
                        {
                            Id = 26,
                            Language = "Mortel"
                        },
                        new
                        {
                            Id = 27,
                            Language = "Mouvement"
                        },
                        new
                        {
                            Id = 28,
                            Language = "Liaison"
                        },
                        new
                        {
                            Id = 29,
                            Language = "Ces"
                        },
                        new
                        {
                            Id = 30,
                            Language = "Ici"
                        },
                        new
                        {
                            Id = 31,
                            Language = "Mortelle"
                        },
                        new
                        {
                            Id = 32,
                            Language = "Moustique"
                        },
                        new
                        {
                            Id = 33,
                            Language = "L'Argile"
                        },
                        new
                        {
                            Id = 34,
                            Language = "Monde"
                        },
                        new
                        {
                            Id = 35,
                            Language = "Merveilles"
                        },
                        new
                        {
                            Id = 36,
                            Language = "Messager"
                        },
                        new
                        {
                            Id = 37,
                            Language = "Aujourd'hui"
                        },
                        new
                        {
                            Id = 38,
                            Language = "Peut"
                        },
                        new
                        {
                            Id = 39,
                            Language = "Les"
                        },
                        new
                        {
                            Id = 40,
                            Language = "L'Immonde"
                        },
                        new
                        {
                            Id = 41,
                            Language = "Meuble"
                        },
                        new
                        {
                            Id = 42,
                            Language = "Migale"
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.RaceLanguages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceLanguages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            LanguageId = 3,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 3,
                            LanguageId = 1,
                            RaceId = 2
                        },
                        new
                        {
                            Id = 4,
                            LanguageId = 3,
                            RaceId = 2
                        },
                        new
                        {
                            Id = 5,
                            LanguageId = 1,
                            RaceId = 3
                        },
                        new
                        {
                            Id = 6,
                            LanguageId = 3,
                            RaceId = 3
                        },
                        new
                        {
                            Id = 7,
                            LanguageId = 1,
                            RaceId = 4
                        },
                        new
                        {
                            Id = 8,
                            LanguageId = 5,
                            RaceId = 4
                        },
                        new
                        {
                            Id = 9,
                            LanguageId = 1,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 10,
                            LanguageId = 5,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 11,
                            LanguageId = 1,
                            RaceId = 6
                        },
                        new
                        {
                            Id = 12,
                            LanguageId = 1,
                            RaceId = 7
                        },
                        new
                        {
                            Id = 13,
                            LanguageId = 1,
                            RaceId = 8
                        },
                        new
                        {
                            Id = 14,
                            LanguageId = 2,
                            RaceId = 8
                        },
                        new
                        {
                            Id = 15,
                            LanguageId = 1,
                            RaceId = 9
                        },
                        new
                        {
                            Id = 16,
                            LanguageId = 2,
                            RaceId = 9
                        },
                        new
                        {
                            Id = 17,
                            LanguageId = 1,
                            RaceId = 10
                        },
                        new
                        {
                            Id = 18,
                            LanguageId = 3,
                            RaceId = 10
                        },
                        new
                        {
                            Id = 19,
                            LanguageId = 1,
                            RaceId = 11
                        },
                        new
                        {
                            Id = 20,
                            LanguageId = 6,
                            RaceId = 11
                        },
                        new
                        {
                            Id = 21,
                            LanguageId = 1,
                            RaceId = 12
                        },
                        new
                        {
                            Id = 22,
                            LanguageId = 10,
                            RaceId = 12
                        },
                        new
                        {
                            Id = 23,
                            LanguageId = 1,
                            RaceId = 13
                        },
                        new
                        {
                            Id = 24,
                            LanguageId = 4,
                            RaceId = 13
                        },
                        new
                        {
                            Id = 25,
                            LanguageId = 1,
                            RaceId = 14
                        },
                        new
                        {
                            Id = 26,
                            LanguageId = 4,
                            RaceId = 14
                        },
                        new
                        {
                            Id = 27,
                            LanguageId = 1,
                            RaceId = 15
                        },
                        new
                        {
                            Id = 28,
                            LanguageId = 11,
                            RaceId = 15
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Races", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CharismasBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstitutionBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DexterityBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntelligenceBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrenghtBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WisdomBonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "2",
                            IntelligenceBonus = "1",
                            Race = "Haut-elfe",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 2,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "2",
                            IntelligenceBonus = "0",
                            Race = "elfe des bois",
                            Size = "M",
                            SourceId = 1,
                            Speed = "10,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "1"
                        },
                        new
                        {
                            Id = 3,
                            CharismasBonus = "1",
                            ConstitutionBonus = "0",
                            DexterityBonus = "2",
                            IntelligenceBonus = "0",
                            Race = "elfe noir",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 4,
                            CharismasBonus = "1",
                            ConstitutionBonus = "0",
                            DexterityBonus = "2",
                            IntelligenceBonus = "0",
                            Race = "Halfelin pied-léger",
                            Size = "P",
                            SourceId = 1,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 5,
                            CharismasBonus = "0",
                            ConstitutionBonus = "1",
                            DexterityBonus = "2",
                            IntelligenceBonus = "0",
                            Race = "Halfelin robuste",
                            Size = "P",
                            SourceId = 1,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 6,
                            CharismasBonus = "1",
                            ConstitutionBonus = "1",
                            DexterityBonus = "1",
                            IntelligenceBonus = "1",
                            Race = "Humain ",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "1",
                            WisdomBonus = "1"
                        },
                        new
                        {
                            Id = 7,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Humain (Don)",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 8,
                            CharismasBonus = "0",
                            ConstitutionBonus = "2",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Nain des collines",
                            Size = "M",
                            SourceId = 1,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "1"
                        },
                        new
                        {
                            Id = 9,
                            CharismasBonus = "0",
                            ConstitutionBonus = "2",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Nain des montagnes",
                            Size = "M",
                            SourceId = 1,
                            Speed = "7.5m/round",
                            StrenghtBonus = "2",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 10,
                            CharismasBonus = "2",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Demi-elfe",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 11,
                            CharismasBonus = "0",
                            ConstitutionBonus = "1",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Demi-Orc",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "2",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 12,
                            CharismasBonus = "1",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Drakéide",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "2",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 13,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "1",
                            IntelligenceBonus = "2",
                            Race = "Gnome des forêts",
                            Size = "P",
                            SourceId = 1,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 14,
                            CharismasBonus = "0",
                            ConstitutionBonus = "1",
                            DexterityBonus = "0",
                            IntelligenceBonus = "2",
                            Race = "Gnome des roches",
                            Size = "P",
                            SourceId = 1,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 15,
                            CharismasBonus = "2",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "1",
                            Race = "Tieffelin",
                            Size = "M",
                            SourceId = 1,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 16,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Aarakocra",
                            Size = "M",
                            SourceId = 9,
                            Speed = "7,5m/round (marche), 15m/round (vol)",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 17,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Aasimar",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 18,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Centaure",
                            Size = "M",
                            SourceId = 9,
                            Speed = "12m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 19,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Changeling",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 20,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Conil",
                            Size = "P",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 21,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Dhampire",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 22,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Duergar",
                            Size = "M",
                            SourceId = 10,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 23,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Eladrin",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 24,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Elfe aquatique",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round, 9m/nage",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 25,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Fadette",
                            Size = "M",
                            SourceId = 10,
                            Speed = "10,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 26,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Féral",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 27,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Firbolg",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 28,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Forgelier",
                            Size = "M",
                            SourceId = 11,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 29,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Genasi (Air)",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 30,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Genasi (Terre)",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 31,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Genasi (Feu)",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 32,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Genasi (Eau)",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round, 9m/nage",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 33,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Githzerai",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 34,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Gnome des profondeurs",
                            Size = "P",
                            SourceId = 9,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 35,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Gobelin",
                            Size = "P",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 36,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Gobelours",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 37,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Goliath",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 38,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Halfelin sagespectre",
                            Size = "P",
                            SourceId = 12,
                            Speed = "7,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 39,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Hiboulin",
                            Size = "M",
                            SourceId = 13,
                            Speed = "9m/round (marche), 10,5m/round (vol)",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 40,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Hobgobelin",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 41,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Homme-Lézard",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round, 9m/nage",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 42,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Kenku",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 43,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Kobold",
                            Size = "P",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 44,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Minotaure",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 45,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Orc",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 46,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Ressucité",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 47,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Sang maudit",
                            Size = "M",
                            SourceId = 10,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 48,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Satyre",
                            Size = "M",
                            SourceId = 9,
                            Speed = "10,5m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 49,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Shadar-kai",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 50,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Tabaxi",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 51,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Torte",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 52,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Triton",
                            Size = "M",
                            SourceId = 9,
                            Speed = "9m/round, 9m/nage",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        },
                        new
                        {
                            Id = 53,
                            CharismasBonus = "0",
                            ConstitutionBonus = "0",
                            DexterityBonus = "0",
                            IntelligenceBonus = "0",
                            Race = "Yuan-ti",
                            Size = "M",
                            SourceId = 3,
                            Speed = "9m/round",
                            StrenghtBonus = "0",
                            WisdomBonus = "0"
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Skill = "Acrobaties (Dex)"
                        },
                        new
                        {
                            Id = 2,
                            Skill = "Arcanes (Int)"
                        },
                        new
                        {
                            Id = 3,
                            Skill = "Athlétisme (For)"
                        },
                        new
                        {
                            Id = 4,
                            Skill = "Discrétion (Dex)"
                        },
                        new
                        {
                            Id = 5,
                            Skill = "Dressage (Sag)"
                        },
                        new
                        {
                            Id = 6,
                            Skill = "Escamotage (Dex)"
                        },
                        new
                        {
                            Id = 7,
                            Skill = "Histoire (Int)"
                        },
                        new
                        {
                            Id = 8,
                            Skill = "Intimidation (Cha)"
                        },
                        new
                        {
                            Id = 9,
                            Skill = "Intuition (Sag)"
                        },
                        new
                        {
                            Id = 10,
                            Skill = "Investigation (Int)"
                        },
                        new
                        {
                            Id = 11,
                            Skill = "Médecine (Sag)"
                        },
                        new
                        {
                            Id = 12,
                            Skill = "Nature (Int)"
                        },
                        new
                        {
                            Id = 13,
                            Skill = "Perception (Sag)"
                        },
                        new
                        {
                            Id = 14,
                            Skill = "Persuasion (Cha)"
                        },
                        new
                        {
                            Id = 15,
                            Skill = "Religion (Int)"
                        },
                        new
                        {
                            Id = 16,
                            Skill = "Représentation (Cha)"
                        },
                        new
                        {
                            Id = 17,
                            Skill = "Survie (Sag)"
                        },
                        new
                        {
                            Id = 18,
                            Skill = "Tromperie (Cha)"
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Sources", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Source = "Player's Handbook"
                        },
                        new
                        {
                            Id = 2,
                            Source = "Xanathar's Guide to Everything"
                        },
                        new
                        {
                            Id = 3,
                            Source = "Tasha's Cauldron of Everything"
                        },
                        new
                        {
                            Id = 4,
                            Source = "Fizban's Treasury of Dragons"
                        },
                        new
                        {
                            Id = 5,
                            Source = "Glory of the Giants"
                        },
                        new
                        {
                            Id = 6,
                            Source = "Settings"
                        },
                        new
                        {
                            Id = 7,
                            Source = "Aventures"
                        },
                        new
                        {
                            Id = 8,
                            Source = "Extra(divers)"
                        },
                        new
                        {
                            Id = 9,
                            Source = "Monsters of the Multiverse"
                        },
                        new
                        {
                            Id = 10,
                            Source = "Van Richten's Guide Ravenloft"
                        },
                        new
                        {
                            Id = 11,
                            Source = "Ereborn: Rising from the Last War"
                        },
                        new
                        {
                            Id = 12,
                            Source = "Sword Coast Adventurer's Guide"
                        },
                        new
                        {
                            Id = 13,
                            Source = "Strixhaven : A Curriculum of Chaos"
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Spells", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CastingTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Components")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HigherLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Spells");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CastingTime = "1 action",
                            Components = "V, S, M",
                            Description = "Un trait lumineux jaillit de votre doigt pointé vers un point que vous choisissez dans la portée, puis éclate avec un rugissement en une explosion de flammes.",
                            Duration = "Instantanée",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 4 ou plus, les dégâts augmentent de 1d6 pour chaque niveau d'emplacement au-dessus du niveau 3.",
                            Level = 3,
                            Name = "Boule de Feu",
                            Range = "45 mètres",
                            School = "Évocation",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CastingTime = "1 action",
                            Components = "V, S",
                            Description = "Vous créez trois projectiles lumineux de force magique. Chaque projectile touche une créature de votre choix que vous pouvez voir dans la portée.",
                            Duration = "Instantanée",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 2 ou plus, le sort crée un projectile supplémentaire pour chaque niveau d'emplacement au-dessus du niveau 1.",
                            Level = 1,
                            Name = "Projectile Magique",
                            Range = "36 mètres",
                            School = "Évocation",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 3,
                            CastingTime = "1 action bonus",
                            Components = "V",
                            Description = "Une créature de votre choix que vous pouvez voir dans la portée regagne un nombre de points de vie égal à 1d4 + votre modificateur de capacité de lancement de sorts.",
                            Duration = "Instantanée",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 2 ou plus, la guérison augmente de 1d4 pour chaque niveau d'emplacement au-dessus du niveau 1.",
                            Level = 1,
                            Name = "Mot de Guérison",
                            Range = "18 mètres",
                            School = "Évocation",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 4,
                            CastingTime = "1 réaction, que vous prenez lorsque vous êtes touché par une attaque ou ciblé par le sort projectile magique",
                            Components = "V, S",
                            Description = "Une barrière invisible de force magique apparaît et vous protège. Jusqu'au début de votre prochain tour, vous avez un bonus de +5 à la CA, y compris contre l'attaque déclenchant, et vous ne subissez aucun dégât de projectile magique.",
                            Duration = "1 round",
                            HigherLevel = "",
                            Level = 1,
                            Name = "Bouclier",
                            Range = "Personnelle",
                            School = "Abjuration",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 5,
                            CastingTime = "1 action",
                            Components = "V, S, M",
                            Description = "Un éclair de lumière jaillit de vos doigts tendus pour frapper une cible que vous pouvez voir dans la portée. La cible doit réussir un jet de sauvegarde de Dextérité, sinon elle subit 8d6 points de dégâts de foudre, ou la moitié des dégâts en cas de succès.",
                            Duration = "Instantanée",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 4 ou plus, les dégâts augmentent de 1d6 pour chaque niveau d'emplacement au-dessus du niveau 3.",
                            Level = 3,
                            Name = "Éclair",
                            Range = "30 mètres",
                            School = "Évocation",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 6,
                            CastingTime = "1 action",
                            Components = "V, S",
                            Description = "Une main spectrale flottante apparaît à un point que vous choisissez dans la portée. La main reste pour la durée ou jusqu'à ce que vous la congédiez par une action. La main peut manipuler un objet, ouvrir une porte ou un contenant, ranger ou récupérer un objet dans un conteneur ouvert, ou verser le contenu d'une fiole.",
                            Duration = "1 minute",
                            HigherLevel = "",
                            Level = 0,
                            Name = "Main de Mage",
                            Range = "9 mètres",
                            School = "Transmutation",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 7,
                            CastingTime = "1 action",
                            Components = "V, S, M",
                            Description = "Une colonne d'énergie électrique tombe du ciel sur une cible que vous pouvez voir dans la portée. La cible doit réussir un jet de sauvegarde de Dextérité, sinon elle subit 8d6 points de dégâts de foudre, ou la moitié des dégâts en cas de succès.",
                            Duration = "Instantanée",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 4 ou plus, les dégâts augmentent de 1d6 pour chaque niveau d'emplacement au-dessus du niveau 3.",
                            Level = 3,
                            Name = "Appel de Foudre",
                            Range = "46 mètres",
                            School = "Évocation",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 8,
                            CastingTime = "1 action",
                            Components = "V, S",
                            Description = "Vous tentez de charmer une créature que vous pouvez voir dans la portée. Elle doit réussir un jet de sauvegarde de Sagesse ou être charmée par vous jusqu'à la fin du sort.",
                            Duration = "1 heure",
                            HigherLevel = "Quand vous lancez ce sort en utilisant un emplacement de sort de niveau 2 ou plus, vous pouvez cibler une créature supplémentaire pour chaque niveau d'emplacement au-dessus du niveau 1.",
                            Level = 1,
                            Name = "Charme-Personnes",
                            Range = "18 mètres",
                            School = "Enchantement",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 9,
                            CastingTime = "1 réaction, qui vous est accordée lorsque vous êtes la cible d'un sort de 1er niveau ou plus qui n'est pas une créature",
                            Components = "V, S",
                            Description = "Une barrière invisible de force magique apparaît et vous protège. Jusqu'au début de votre prochain tour, vous avez une armure de +5 CA, y compris contre l'attaque qui a déclenché le sort.",
                            Duration = "1 round",
                            HigherLevel = "",
                            Level = 3,
                            Name = "Miroir de Renvoi",
                            Range = "Personnelle",
                            School = "Abjuration",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 10,
                            CastingTime = "1 action",
                            Components = "V, S",
                            Description = "Pour la durée, vous sentez la présence de la magie dans les domaines, dans la zone de la mémoire en  question ne la pas dans un rayon, détermine la présence de la magie. si le la voir  créature ou magiques, dans  être ou  objet et dans une portée.",
                            Duration = "Concentration, jusqu'à 10 minutes",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 2 ou plus, le nombre de créatures ou d'objets magiques que vous pouvez détecter augmente de 1 pour chaque niveau d'emplacement au-dessus du niveau 1.",
                            Level = 1,
                            Name = "Détection de la Magie",
                            Range = "Rouleau de 18 mètres",
                            School = "Divination",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 11,
                            CastingTime = "1 action",
                            Components = "V, S, M",
                            Description = "Vous bénissez jusqu'à trois créatures de votre choix dans la portée. Chaque fois qu'une cible effectue un jet d'attaque ou un jet de sauvegarde avant que le sort ne se termine, la cible peut lancer un d4 supplémentaire et ajouter le nombre jeté au jet d'attaque ou au jet de sauvegarde.",
                            Duration = "Concentration, jusqu'à 1 minute",
                            HigherLevel = "Lorsque vous lancez ce sort en utilisant un emplacement de sort de niveau 2 ou plus, vous pouvez cibler une créature supplémentaire pour chaque niveau d'emplacement au-dessus du niveau 1.",
                            Level = 1,
                            Name = "Bénédiction",
                            Range = "18 mètres",
                            School = "Enchantement",
                            SourceId = 1
                        },
                        new
                        {
                            Id = 12,
                            CastingTime = "1 action",
                            Components = "V, S",
                            Description = "La magie étrange détectée en une chaque portée, de les neutralisant par et même. le cas échéant de la objet  nombre est répartie, la magic. d'un la portée  chaque  bien que se  manifester dépend d'une. si être, le, réduit en magique, dissipation de la ou sont et l'ange. le la ou même disparait, qu'il.",
                            Duration = "Concentration, jusqu'à 1 minute",
                            HigherLevel = "",
                            Level = 3,
                            Name = "Dissipation de la Magie",
                            Range = "Personnelle",
                            School = "Abjuration",
                            SourceId = 1
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.TypesItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypesItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeItem = "Armes courantes de corps à corps"
                        },
                        new
                        {
                            Id = 2,
                            TypeItem = "Armes courantes à distance"
                        },
                        new
                        {
                            Id = 3,
                            TypeItem = "Armes de guerre de corps à corps"
                        },
                        new
                        {
                            Id = 4,
                            TypeItem = "Armes de guerre à distance"
                        },
                        new
                        {
                            Id = 5,
                            TypeItem = "Armures légères"
                        },
                        new
                        {
                            Id = 6,
                            TypeItem = "Armures intermédiaires"
                        },
                        new
                        {
                            Id = 7,
                            TypeItem = "Amures lourdes"
                        },
                        new
                        {
                            Id = 8,
                            TypeItem = "Bouclier"
                        },
                        new
                        {
                            Id = 9,
                            TypeItem = "Instrument de musique"
                        },
                        new
                        {
                            Id = 10,
                            TypeItem = "Jeux"
                        },
                        new
                        {
                            Id = 11,
                            TypeItem = "Outils d'artisan"
                        },
                        new
                        {
                            Id = 12,
                            TypeItem = "Montures"
                        },
                        new
                        {
                            Id = 13,
                            TypeItem = "Objet"
                        },
                        new
                        {
                            Id = 14,
                            TypeItem = "Munitions"
                        },
                        new
                        {
                            Id = 15,
                            TypeItem = "Symbole sacré"
                        });
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Backgrounds", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Sources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.BackgroundsItems", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Backgrounds", "Background")
                        .WithMany()
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Background");

                    b.Navigation("item");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.BackgroundsSkills", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Backgrounds", "Background")
                        .WithMany()
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Skills", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Background");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.ClassSkills", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Classes", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Skills", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Classes", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Sources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Entities", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Items", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Backgrounds", "Background")
                        .WithMany()
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Classes", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Races", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "Shield")
                        .WithMany()
                        .HasForeignKey("ShieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "ToolOne")
                        .WithMany()
                        .HasForeignKey("ToolOneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "ToolTwo")
                        .WithMany()
                        .HasForeignKey("ToolTwoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "WeaponOne")
                        .WithMany()
                        .HasForeignKey("WeaponOneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "WeaponTwo")
                        .WithMany()
                        .HasForeignKey("WeaponTwoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Armor");

                    b.Navigation("Background");

                    b.Navigation("Class");

                    b.Navigation("Race");

                    b.Navigation("Shield");

                    b.Navigation("ToolOne");

                    b.Navigation("ToolTwo");

                    b.Navigation("User");

                    b.Navigation("WeaponOne");

                    b.Navigation("WeaponTwo");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.EntitySkills", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Skills", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Feats", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Sources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Inventories", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Items", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.TypesItems", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.RaceLanguages", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Languages", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaboFinalAPIDomain.Models.Races", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Races", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Sources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Spells", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Sources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("LaboFinalAPIDomain.Models.Users", b =>
                {
                    b.HasOne("LaboFinalAPIDomain.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
